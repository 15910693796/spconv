global:
    console_url: localhost:50091
    envs: 
        PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION: python # c++ libprotobuf and python will conflicit

analyzers: # only one analyzer is allowed for one type for now.
    PythonAnalyzer:
        
    SimpleCPPAnalyzer: # $<astex> devops.devs = ["_ci_dev_xxx"] </astex> is allowed in raw sources.
        includes: ["*.cpp", "*.cu", "*.cc", "*.h", "*.hpp", "*.hxx", "*.cxx"]

observers:
    # run test functions when that function change or marked function change.
    test:
        type: TestObserver

    # run dev functions when that function change or marked function change.
    dev:
        type: DevObserver
        pattern: _ci_dev_.*

    clangdev:
        type: CPPDevObserver
        main_pattern: dev_.*\.(cc|cpp|cxx)
        pattern: .*\.(cc|cpp|cxx|h|hpp|hxx)
        compiler: clang++
        executable: build/codeai_dev
        includes: [
            include,
            /usr/local/cuda/include,
            /home/yy/anaconda3/include,
            /home/yy/anaconda3/include/python3.7m,
            third_party/pybind11/include,
            third_party/include,
            /home/yy/library/boost_1_72_0,
        ]
        libpaths: [
            /home/yy/anaconda3/lib,
        ]
        libraries: [-lnvinfer, -lpython3.7m, -lcublas, -lcudart, -ljpeg]
        std: c++2a
        options: [-Wall, -Wextra]

    cudadev:
        type: CPPDevObserver
        main_pattern: dev_.*\.cu
        pattern: .*\.(cc|cpp|cxx|h|hpp|hxx|cu)
        compiler: nvcc
        executable: build/codeai_dev_cuda
        run_cmd: [$(executable)]
        sources: []
        includes: [
            include,
            /usr/local/cuda/include,
            /home/yy/anaconda3/include,
            /home/yy/anaconda3/include/python3.7m,
            third_party/pybind11/include,
            third_party/cutlass/include,
        ]
        libpaths: [
            /usr/local/cuda/lib64,
            /home/yy/anaconda3/lib,
        ]
        libraries: [-lpython3.7m, -lcudart, -lcublas, -ljpeg]
        std: c++14
        options: [
            -Wno-deprecated-declarations,
            "-gencode=arch=compute_52,code=sm_52",
            "-gencode=arch=compute_61,code=sm_61",
            "-gencode=arch=compute_60,code=sm_60",
            "-gencode=arch=compute_70,code=sm_70",
            "-gencode=arch=compute_75,code=sm_75",
        ]

    torchdev:
        type: CPPDevObserver
        main_pattern: torchdev_.*\.(cu|cpp|cc|cxx)
        pattern: .*\.(cc|cpp|cxx|h|hpp|hxx|cu)
        compiler: nvcc
        executable: build/codeai_dev_torch
        run_cmd: [$(executable)]
        fail_cmds: # run cmd when pervious run fail with retcode
            -6: [gdb, -ex, run, -ex, bt, -ex, quit, $(executable)] # segfault in unix
        includes: [
            include,
            /home/yy/anaconda3/lib/python3.7/site-packages/torch/include,
            /home/yy/anaconda3/lib/python3.7/site-packages/torch/include/torch/csrc/api/include,
            /usr/local/cuda/include,
            /home/yy/anaconda3/include,
            /home/yy/anaconda3/include/python3.7m,
            third_party/pybind11/include,
            third_party/cutlass/include,
        ]
        libpaths: [
            /home/yy/anaconda3/lib/python3.7/site-packages/torch/lib,
            /usr/local/cuda/lib64,
            /home/yy/anaconda3/lib,
        ]
        libraries: [-lpython3.7m, -lcublas, -lcudart, -ljpeg, -lpthread, 
                    "-Xcompiler=\"-Wl,--no-as-needed,-lc10\"", 
                    "-Xcompiler=\"-Wl,--no-as-needed,-ltorch\"", 
                    "-Xcompiler=\"-Wl,--no-as-needed,-ltorch_cpu\"", 
                    "-Xcompiler=\"-Wl,--no-as-needed,-lc10_cuda\"", 
                    "-Xcompiler=\"-Wl,--no-as-needed,-ltorch_cuda\""]
        std: c++14
        # options: [--cuda-gpu-arch=sm_61, -Wno-deprecated-declarations, -D_GLIBCXX_USE_CXX11_ABI=0]

        options: [
            -Wno-deprecated-declarations,
            --expt-relaxed-constexpr,
            "-gencode=arch=compute_61,code=sm_61",
            -D_GLIBCXX_USE_CXX11_ABI=0,
        ]



